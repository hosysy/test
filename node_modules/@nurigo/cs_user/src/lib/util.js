'use strict'

var crypto = require('crypto')
var _ = require('lodash')

module.exports = {

  hash: function (value) {
    return crypto.createHash('sha1').update(value).digest('hex').slice(0, 8)
  },
  buildKey: function (params, payload) {
    var result = params.TableName
    var type
    var keys = []
    var payloads = []

    if (params.Key) {
      type = 'Key'
      for (let key in params.Key) {
        keys.push(key + '=' + params.Key[key])
      }
    } else if (params.ExpressionAttributeValues) {
      type = 'Query'
      for (let key in params.ExpressionAttributeValues) {
        keys.push(key + '=' + params.ExpressionAttributeValues[key])
      }
    } else {
      throw new Error('Cannot build key')
    }
    if (payload) {
      _.forOwn(payload, (val, key) => {
        payloads.push(key + '=' + val)
      })
    }
    // console.log(result + ':' + type + '(' + keys.join(',') + ')Payload(' + payloads.join(',') + ')')
    return result + ':' + type + '(' + keys.join(',') + ')Payload(' + payloads.join(',') + ')'
  }
}
